apiVersion: v1
kind: Service
metadata:
  namespace: realworld
  name: backend-service
spec:
  ports:
    - name: http-backend
      port: 8080
      targetPort: 8080
  selector:
    stack: backend
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: realworld
  name: backend-deployment
spec:
  selector:
    matchLabels:
      stack: backend
  replicas: 2
  template:
    metadata:
      labels:
        stack: backend
    spec:
      volumes:
        - name: cloudsql-instance-credentials
          secret:
            secretName: cloudsql-instance-credentials
      containers:
        - name: cloudsql-proxy
          image: gcr.io/cloudsql-docker/gce-proxy:1.11
          command: ["/cloud_sql_proxy",
                    "-instances=[INSTANCIA_CONEXION_MYSQL]=tcp:3306",
                    "-credential_file=/secrets/cloudsql/credentials.json"]
          volumeMounts:
            - name: cloudsql-instance-credentials
              mountPath: /secrets/cloudsql
              readOnly: true
        - name: backend-container
          image: gcr.io/[ID_DEL_PROYECTO]/realworld-backend
          ports:
            - containerPort: 8080
              protocol: TCP
          env:
            - name: DB_HOST
              valueFrom:
                secretKeyRef:
                  name: backend-secret
                  key: DB_HOST
            - name: DB_PORT
              valueFrom:
                secretKeyRef:
                  name: backend-secret
                  key: DB_PORT
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: backend-secret
                  key: DB_USER
            - name: DB_PASS
              valueFrom:
                secretKeyRef:
                  name: backend-secret
                  key: DB_PASS
            - name: DB_NAME
              valueFrom:
                secretKeyRef:
                  name: backend-secret
                  key: DB_NAME